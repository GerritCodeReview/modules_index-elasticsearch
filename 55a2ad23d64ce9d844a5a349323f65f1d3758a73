{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04230fe0_c1e5e99a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-08-01T09:21:27Z",
      "side": 1,
      "message": "I don\u0027t think we need a footnote for changes - we can just do `change 377794` inline and it will render as a link.",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7613f20c_a3f2d627",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-07-26T14:39:12Z",
      "side": 1,
      "message": "In order to be tested with AbstractDeamonTest this needs to be merged first, https://gerrit-review.googlesource.com/c/gerrit/+/380915",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "057663d7_8ec7ec83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-01T06:27:32Z",
      "side": 1,
      "message": "Have you tried following the path that is done in `AbstractQuery*Test` (e.g. in [1]) in `index-elasticsearch` library so that changing Gerrit core could be avoided?\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/stable-3.6/javatests/com/google/gerrit/server/query/account/AbstractQueryAccountsTest.java",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e91b5585_804cc929",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-01T08:31:06Z",
      "side": 1,
      "message": "Yes that is exactly as it was done in patchset 8. Mind having a look? On that approach that we don\u0027t need the change in gerrit core, but we won\u0027t be using the AbstractDeamonTest.",
      "parentUuid": "057663d7_8ec7ec83",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0de4227a_2f030b68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-07T07:11:32Z",
      "side": 1,
      "message": "Check change 382034 for an alternative solution",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1a8f195_206f89cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-07T09:26:33Z",
      "side": 1,
      "message": "I believe Change 382034 is a better solution.",
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d698202b_865e4b74",
        "filename": "src/test/java/com/google/gerrit/elasticsearch/ElasticPaginationTypeTest.java",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-08-01T09:21:27Z",
      "side": 1,
      "message": "This isn\u0027t a test name, is it? It\u0027s a pagination type. We should probably call this something like `UNSUPPORTED PAGINATION_TYPE` Or maybe even `PAGINATION_TYPE_NONE`, to reflect what it is rather than what it does.",
      "range": {
        "startLine": 44,
        "startChar": 23,
        "endLine": 44,
        "endChar": 57
      },
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e70927b6_e71af754",
        "filename": "src/test/java/com/google/gerrit/elasticsearch/ElasticPaginationTypeTest.java",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-01T09:41:41Z",
      "side": 1,
      "message": "Yes that is a test name, please look at the beforeTest override (line 61). This is done so that the before doesn\u0027t throw the exeption before reaching the test where we want to validate that the exception is thown upon querying the indices.\n\n@dariusjokilehto@gmail.com Any suggestion on better naming on that constant is welcome though.",
      "parentUuid": "d698202b_865e4b74",
      "range": {
        "startLine": 44,
        "startChar": 23,
        "endLine": 44,
        "endChar": 57
      },
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44670c34_8d7e78ba",
        "filename": "src/test/java/com/google/gerrit/elasticsearch/ElasticPaginationTypeTest.java",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-08-01T10:35:24Z",
      "side": 1,
      "message": "Ah, I see - my bad. In that case just a nit - maybe just `UNSUPPORTED_PAGINATION_TEST_NAME`?",
      "parentUuid": "e70927b6_e71af754",
      "range": {
        "startLine": 44,
        "startChar": 23,
        "endLine": 44,
        "endChar": 57
      },
      "revId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Verified=MIN"],"failingAtoms":["label:Verified=MAX"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a2ad23d64ce9d844a5a349323f65f1d3758a73",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}